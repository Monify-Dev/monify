// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.0
// source: friend_bill.proto

package monify

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FriendBillServiceClient is the client API for FriendBillService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FriendBillServiceClient interface {
	CreateFriendBill(ctx context.Context, in *CreateFriendBillRequest, opts ...grpc.CallOption) (*CreateFriendBillResponse, error)
	DeleteFriendBill(ctx context.Context, in *DeleteFriendBillRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ModifyFriendBill(ctx context.Context, in *ModifyFriendBillRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetFriendBill(ctx context.Context, in *GetFriendBillRequest, opts ...grpc.CallOption) (*GetFriendBillResponse, error)
}

type friendBillServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFriendBillServiceClient(cc grpc.ClientConnInterface) FriendBillServiceClient {
	return &friendBillServiceClient{cc}
}

func (c *friendBillServiceClient) CreateFriendBill(ctx context.Context, in *CreateFriendBillRequest, opts ...grpc.CallOption) (*CreateFriendBillResponse, error) {
	out := new(CreateFriendBillResponse)
	err := c.cc.Invoke(ctx, "/FriendBillService/CreateFriendBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendBillServiceClient) DeleteFriendBill(ctx context.Context, in *DeleteFriendBillRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/FriendBillService/DeleteFriendBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendBillServiceClient) ModifyFriendBill(ctx context.Context, in *ModifyFriendBillRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/FriendBillService/ModifyFriendBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendBillServiceClient) GetFriendBill(ctx context.Context, in *GetFriendBillRequest, opts ...grpc.CallOption) (*GetFriendBillResponse, error) {
	out := new(GetFriendBillResponse)
	err := c.cc.Invoke(ctx, "/FriendBillService/GetFriendBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FriendBillServiceServer is the server API for FriendBillService service.
// All implementations must embed UnimplementedFriendBillServiceServer
// for forward compatibility
type FriendBillServiceServer interface {
	CreateFriendBill(context.Context, *CreateFriendBillRequest) (*CreateFriendBillResponse, error)
	DeleteFriendBill(context.Context, *DeleteFriendBillRequest) (*emptypb.Empty, error)
	ModifyFriendBill(context.Context, *ModifyFriendBillRequest) (*emptypb.Empty, error)
	GetFriendBill(context.Context, *GetFriendBillRequest) (*GetFriendBillResponse, error)
	mustEmbedUnimplementedFriendBillServiceServer()
}

// UnimplementedFriendBillServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFriendBillServiceServer struct {
}

func (UnimplementedFriendBillServiceServer) CreateFriendBill(context.Context, *CreateFriendBillRequest) (*CreateFriendBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFriendBill not implemented")
}
func (UnimplementedFriendBillServiceServer) DeleteFriendBill(context.Context, *DeleteFriendBillRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFriendBill not implemented")
}
func (UnimplementedFriendBillServiceServer) ModifyFriendBill(context.Context, *ModifyFriendBillRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyFriendBill not implemented")
}
func (UnimplementedFriendBillServiceServer) GetFriendBill(context.Context, *GetFriendBillRequest) (*GetFriendBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFriendBill not implemented")
}
func (UnimplementedFriendBillServiceServer) mustEmbedUnimplementedFriendBillServiceServer() {}

// UnsafeFriendBillServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FriendBillServiceServer will
// result in compilation errors.
type UnsafeFriendBillServiceServer interface {
	mustEmbedUnimplementedFriendBillServiceServer()
}

func RegisterFriendBillServiceServer(s grpc.ServiceRegistrar, srv FriendBillServiceServer) {
	s.RegisterService(&FriendBillService_ServiceDesc, srv)
}

func _FriendBillService_CreateFriendBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFriendBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendBillServiceServer).CreateFriendBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FriendBillService/CreateFriendBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendBillServiceServer).CreateFriendBill(ctx, req.(*CreateFriendBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FriendBillService_DeleteFriendBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFriendBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendBillServiceServer).DeleteFriendBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FriendBillService/DeleteFriendBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendBillServiceServer).DeleteFriendBill(ctx, req.(*DeleteFriendBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FriendBillService_ModifyFriendBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyFriendBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendBillServiceServer).ModifyFriendBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FriendBillService/ModifyFriendBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendBillServiceServer).ModifyFriendBill(ctx, req.(*ModifyFriendBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FriendBillService_GetFriendBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendBillServiceServer).GetFriendBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FriendBillService/GetFriendBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendBillServiceServer).GetFriendBill(ctx, req.(*GetFriendBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FriendBillService_ServiceDesc is the grpc.ServiceDesc for FriendBillService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FriendBillService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FriendBillService",
	HandlerType: (*FriendBillServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFriendBill",
			Handler:    _FriendBillService_CreateFriendBill_Handler,
		},
		{
			MethodName: "DeleteFriendBill",
			Handler:    _FriendBillService_DeleteFriendBill_Handler,
		},
		{
			MethodName: "ModifyFriendBill",
			Handler:    _FriendBillService_ModifyFriendBill_Handler,
		},
		{
			MethodName: "GetFriendBill",
			Handler:    _FriendBillService_GetFriendBill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "friend_bill.proto",
}
