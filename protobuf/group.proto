syntax = "proto3";
option go_package = "github.com/SpeedReach/monify";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


message Empty {}

service GroupService{

  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post: "/v1/group"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) ={
      security: {
        security_requirement: {
          key: "Bearer"
        }
      }
    };
  }

  rpc ListJoinedGroups(Empty) returns (ListJoinedGroupsResponse) {
    option (google.api.http) = {
      get: "/v1/group/joined"

    };
  }

  rpc GenerateInviteCode(GenerateInviteCodeRequest) returns (GenerateInviteCodeResponse) {
    option (google.api.http) = {
      post: "/v1/group/invite-code"
      body: "*"
    };
  }

  rpc JoinGroup(JoinGroupRequest) returns (JoinGroupResponse) {
    option (google.api.http) = {
      post: "/v1/group/join"
      body: "*"
    };
  }

  rpc GetGroupMembers(GetGroupMembersRequest) returns (GetGroupMembersResponse) {
    option (google.api.http) = {
      get: "/v1/group/members/{group_id}"
    };
  }

  rpc DeleteGroup(DeleteGroupRequest) returns (Empty) {
    option (google.api.http) = {
      delete: "/v1/group/{group_id}"
    };
  }

}



message CreateGroupRequest{
  string name = 1;
  string description =2;
}

message ListElement{
  string userId = 1;
  int64 bill = 2;
}

message CreateGroupResponse{
  string group_id = 1;
  string member_id = 2;
}

message GenerateInviteCodeRequest{
  string group_id = 1;
}

message GenerateInviteCodeResponse{
  string invite_code = 1;
}

message JoinGroupRequest{
  string invite_code = 1;
}

message JoinGroupResponse{
  string group_id = 1;
  string member_id = 2;
}


message ListJoinedGroupsResponse{
  repeated Group groups = 1;
}

message Group{
  string group_id = 1;
  string name = 2;
  string description = 3;
}

message GetGroupMembersRequest{
  string group_id = 1;
}

message GetGroupMembersResponse{
  repeated GroupMember members = 1;
}

message GroupMember{
  string member_id = 1;
  string user_id = 2;
  string user_name = 3;
  string avatar_url = 4;
}


message DeleteGroupRequest{
  string group_id = 1;
}

